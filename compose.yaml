services:
  react-frontend:
    image: budget/react-frontend:dev
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    command: npm run dev
  spring-api:
    image: budget/spring-api:dev
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2    # caches Maven dependencies
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/budget
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - db
    command: mvn spring-boot:run
  db:
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: budget
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: spencerdurell@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  
volumes:
  local_pgdata:
  pgadmin-data: